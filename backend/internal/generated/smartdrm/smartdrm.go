// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package smartdrm

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ChannelProof is an auto generated low-level Go binding around an user-defined struct.
type ChannelProof struct {
	Proof   Proof
	Channel common.Address
}

// CreatorClicks is an auto generated low-level Go binding around an user-defined struct.
type CreatorClicks struct {
	Creator common.Address
	Clicks  uint32
}

// Proof is an auto generated low-level Go binding around an user-defined struct.
type Proof struct {
	V     uint8
	R     [32]byte
	S     [32]byte
	Value *big.Int
	Date  string
}

// SmartdrmMetaData contains all meta data concerning the Smartdrm contract.
var SmartdrmMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contractChannel\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"closeChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"}],\"name\":\"createChannel\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractChannel\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"getChannelProof\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"date\",\"type\":\"string\"}],\"internalType\":\"structProof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"getCreatorClicks\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserChannel\",\"outputs\":[{\"internalType\":\"contractChannel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"date\",\"type\":\"string\"}],\"internalType\":\"structProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"contractChannel\",\"name\":\"channel\",\"type\":\"address\"}],\"internalType\":\"structChannelProof[]\",\"name\":\"proofs\",\"type\":\"tuple[]\"}],\"name\":\"setChannelsProofs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"clicks\",\"type\":\"uint32\"}],\"internalType\":\"structCreatorClicks[]\",\"name\":\"clicks\",\"type\":\"tuple[]\"}],\"name\":\"setCreatorsClicks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"splitBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "",
}

// SmartdrmABI is the input ABI used to generate the binding from.
// Deprecated: Use SmartdrmMetaData.ABI instead.
var SmartdrmABI = SmartdrmMetaData.ABI

// SmartdrmBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use SmartdrmMetaData.Bin instead.
var SmartdrmBin = SmartdrmMetaData.Bin

// DeploySmartdrm deploys a new Ethereum contract, binding an instance of Smartdrm to it.
func DeploySmartdrm(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Smartdrm, error) {
	parsed, err := SmartdrmMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(SmartdrmBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Smartdrm{SmartdrmCaller: SmartdrmCaller{contract: contract}, SmartdrmTransactor: SmartdrmTransactor{contract: contract}, SmartdrmFilterer: SmartdrmFilterer{contract: contract}}, nil
}

// Smartdrm is an auto generated Go binding around an Ethereum contract.
type Smartdrm struct {
	SmartdrmCaller     // Read-only binding to the contract
	SmartdrmTransactor // Write-only binding to the contract
	SmartdrmFilterer   // Log filterer for contract events
}

// SmartdrmCaller is an auto generated read-only Go binding around an Ethereum contract.
type SmartdrmCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SmartdrmTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SmartdrmTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SmartdrmFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SmartdrmFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SmartdrmSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SmartdrmSession struct {
	Contract     *Smartdrm         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SmartdrmCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SmartdrmCallerSession struct {
	Contract *SmartdrmCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// SmartdrmTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SmartdrmTransactorSession struct {
	Contract     *SmartdrmTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// SmartdrmRaw is an auto generated low-level Go binding around an Ethereum contract.
type SmartdrmRaw struct {
	Contract *Smartdrm // Generic contract binding to access the raw methods on
}

// SmartdrmCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SmartdrmCallerRaw struct {
	Contract *SmartdrmCaller // Generic read-only contract binding to access the raw methods on
}

// SmartdrmTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SmartdrmTransactorRaw struct {
	Contract *SmartdrmTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSmartdrm creates a new instance of Smartdrm, bound to a specific deployed contract.
func NewSmartdrm(address common.Address, backend bind.ContractBackend) (*Smartdrm, error) {
	contract, err := bindSmartdrm(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Smartdrm{SmartdrmCaller: SmartdrmCaller{contract: contract}, SmartdrmTransactor: SmartdrmTransactor{contract: contract}, SmartdrmFilterer: SmartdrmFilterer{contract: contract}}, nil
}

// NewSmartdrmCaller creates a new read-only instance of Smartdrm, bound to a specific deployed contract.
func NewSmartdrmCaller(address common.Address, caller bind.ContractCaller) (*SmartdrmCaller, error) {
	contract, err := bindSmartdrm(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SmartdrmCaller{contract: contract}, nil
}

// NewSmartdrmTransactor creates a new write-only instance of Smartdrm, bound to a specific deployed contract.
func NewSmartdrmTransactor(address common.Address, transactor bind.ContractTransactor) (*SmartdrmTransactor, error) {
	contract, err := bindSmartdrm(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SmartdrmTransactor{contract: contract}, nil
}

// NewSmartdrmFilterer creates a new log filterer instance of Smartdrm, bound to a specific deployed contract.
func NewSmartdrmFilterer(address common.Address, filterer bind.ContractFilterer) (*SmartdrmFilterer, error) {
	contract, err := bindSmartdrm(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SmartdrmFilterer{contract: contract}, nil
}

// bindSmartdrm binds a generic wrapper to an already deployed contract.
func bindSmartdrm(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := SmartdrmMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Smartdrm *SmartdrmRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Smartdrm.Contract.SmartdrmCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Smartdrm *SmartdrmRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Smartdrm.Contract.SmartdrmTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Smartdrm *SmartdrmRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Smartdrm.Contract.SmartdrmTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Smartdrm *SmartdrmCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Smartdrm.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Smartdrm *SmartdrmTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Smartdrm.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Smartdrm *SmartdrmTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Smartdrm.Contract.contract.Transact(opts, method, params...)
}

// GetChannelProof is a free data retrieval call binding the contract method 0xaaf7fdda.
//
// Solidity: function getChannelProof(address channel) view returns((uint8,bytes32,bytes32,uint256,string))
func (_Smartdrm *SmartdrmCaller) GetChannelProof(opts *bind.CallOpts, channel common.Address) (Proof, error) {
	var out []interface{}
	err := _Smartdrm.contract.Call(opts, &out, "getChannelProof", channel)

	if err != nil {
		return *new(Proof), err
	}

	out0 := *abi.ConvertType(out[0], new(Proof)).(*Proof)

	return out0, err

}

// GetChannelProof is a free data retrieval call binding the contract method 0xaaf7fdda.
//
// Solidity: function getChannelProof(address channel) view returns((uint8,bytes32,bytes32,uint256,string))
func (_Smartdrm *SmartdrmSession) GetChannelProof(channel common.Address) (Proof, error) {
	return _Smartdrm.Contract.GetChannelProof(&_Smartdrm.CallOpts, channel)
}

// GetChannelProof is a free data retrieval call binding the contract method 0xaaf7fdda.
//
// Solidity: function getChannelProof(address channel) view returns((uint8,bytes32,bytes32,uint256,string))
func (_Smartdrm *SmartdrmCallerSession) GetChannelProof(channel common.Address) (Proof, error) {
	return _Smartdrm.Contract.GetChannelProof(&_Smartdrm.CallOpts, channel)
}

// GetCreatorClicks is a free data retrieval call binding the contract method 0x74c9f381.
//
// Solidity: function getCreatorClicks(address creator) view returns(uint32)
func (_Smartdrm *SmartdrmCaller) GetCreatorClicks(opts *bind.CallOpts, creator common.Address) (uint32, error) {
	var out []interface{}
	err := _Smartdrm.contract.Call(opts, &out, "getCreatorClicks", creator)

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetCreatorClicks is a free data retrieval call binding the contract method 0x74c9f381.
//
// Solidity: function getCreatorClicks(address creator) view returns(uint32)
func (_Smartdrm *SmartdrmSession) GetCreatorClicks(creator common.Address) (uint32, error) {
	return _Smartdrm.Contract.GetCreatorClicks(&_Smartdrm.CallOpts, creator)
}

// GetCreatorClicks is a free data retrieval call binding the contract method 0x74c9f381.
//
// Solidity: function getCreatorClicks(address creator) view returns(uint32)
func (_Smartdrm *SmartdrmCallerSession) GetCreatorClicks(creator common.Address) (uint32, error) {
	return _Smartdrm.Contract.GetCreatorClicks(&_Smartdrm.CallOpts, creator)
}

// GetUserChannel is a free data retrieval call binding the contract method 0x12fa1bc9.
//
// Solidity: function getUserChannel(address user) view returns(address)
func (_Smartdrm *SmartdrmCaller) GetUserChannel(opts *bind.CallOpts, user common.Address) (common.Address, error) {
	var out []interface{}
	err := _Smartdrm.contract.Call(opts, &out, "getUserChannel", user)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetUserChannel is a free data retrieval call binding the contract method 0x12fa1bc9.
//
// Solidity: function getUserChannel(address user) view returns(address)
func (_Smartdrm *SmartdrmSession) GetUserChannel(user common.Address) (common.Address, error) {
	return _Smartdrm.Contract.GetUserChannel(&_Smartdrm.CallOpts, user)
}

// GetUserChannel is a free data retrieval call binding the contract method 0x12fa1bc9.
//
// Solidity: function getUserChannel(address user) view returns(address)
func (_Smartdrm *SmartdrmCallerSession) GetUserChannel(user common.Address) (common.Address, error) {
	return _Smartdrm.Contract.GetUserChannel(&_Smartdrm.CallOpts, user)
}

// CloseChannel is a paid mutator transaction binding the contract method 0x1bfc1ffd.
//
// Solidity: function closeChannel(address channel, uint8 v, bytes32 r, bytes32 s) returns()
func (_Smartdrm *SmartdrmTransactor) CloseChannel(opts *bind.TransactOpts, channel common.Address, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _Smartdrm.contract.Transact(opts, "closeChannel", channel, v, r, s)
}

// CloseChannel is a paid mutator transaction binding the contract method 0x1bfc1ffd.
//
// Solidity: function closeChannel(address channel, uint8 v, bytes32 r, bytes32 s) returns()
func (_Smartdrm *SmartdrmSession) CloseChannel(channel common.Address, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _Smartdrm.Contract.CloseChannel(&_Smartdrm.TransactOpts, channel, v, r, s)
}

// CloseChannel is a paid mutator transaction binding the contract method 0x1bfc1ffd.
//
// Solidity: function closeChannel(address channel, uint8 v, bytes32 r, bytes32 s) returns()
func (_Smartdrm *SmartdrmTransactorSession) CloseChannel(channel common.Address, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _Smartdrm.Contract.CloseChannel(&_Smartdrm.TransactOpts, channel, v, r, s)
}

// CreateChannel is a paid mutator transaction binding the contract method 0x5bda673b.
//
// Solidity: function createChannel(uint256 timeout) payable returns()
func (_Smartdrm *SmartdrmTransactor) CreateChannel(opts *bind.TransactOpts, timeout *big.Int) (*types.Transaction, error) {
	return _Smartdrm.contract.Transact(opts, "createChannel", timeout)
}

// CreateChannel is a paid mutator transaction binding the contract method 0x5bda673b.
//
// Solidity: function createChannel(uint256 timeout) payable returns()
func (_Smartdrm *SmartdrmSession) CreateChannel(timeout *big.Int) (*types.Transaction, error) {
	return _Smartdrm.Contract.CreateChannel(&_Smartdrm.TransactOpts, timeout)
}

// CreateChannel is a paid mutator transaction binding the contract method 0x5bda673b.
//
// Solidity: function createChannel(uint256 timeout) payable returns()
func (_Smartdrm *SmartdrmTransactorSession) CreateChannel(timeout *big.Int) (*types.Transaction, error) {
	return _Smartdrm.Contract.CreateChannel(&_Smartdrm.TransactOpts, timeout)
}

// SetChannelsProofs is a paid mutator transaction binding the contract method 0xc7023ff0.
//
// Solidity: function setChannelsProofs(((uint8,bytes32,bytes32,uint256,string),address)[] proofs) returns()
func (_Smartdrm *SmartdrmTransactor) SetChannelsProofs(opts *bind.TransactOpts, proofs []ChannelProof) (*types.Transaction, error) {
	return _Smartdrm.contract.Transact(opts, "setChannelsProofs", proofs)
}

// SetChannelsProofs is a paid mutator transaction binding the contract method 0xc7023ff0.
//
// Solidity: function setChannelsProofs(((uint8,bytes32,bytes32,uint256,string),address)[] proofs) returns()
func (_Smartdrm *SmartdrmSession) SetChannelsProofs(proofs []ChannelProof) (*types.Transaction, error) {
	return _Smartdrm.Contract.SetChannelsProofs(&_Smartdrm.TransactOpts, proofs)
}

// SetChannelsProofs is a paid mutator transaction binding the contract method 0xc7023ff0.
//
// Solidity: function setChannelsProofs(((uint8,bytes32,bytes32,uint256,string),address)[] proofs) returns()
func (_Smartdrm *SmartdrmTransactorSession) SetChannelsProofs(proofs []ChannelProof) (*types.Transaction, error) {
	return _Smartdrm.Contract.SetChannelsProofs(&_Smartdrm.TransactOpts, proofs)
}

// SetCreatorsClicks is a paid mutator transaction binding the contract method 0xb782cce2.
//
// Solidity: function setCreatorsClicks((address,uint32)[] clicks) returns()
func (_Smartdrm *SmartdrmTransactor) SetCreatorsClicks(opts *bind.TransactOpts, clicks []CreatorClicks) (*types.Transaction, error) {
	return _Smartdrm.contract.Transact(opts, "setCreatorsClicks", clicks)
}

// SetCreatorsClicks is a paid mutator transaction binding the contract method 0xb782cce2.
//
// Solidity: function setCreatorsClicks((address,uint32)[] clicks) returns()
func (_Smartdrm *SmartdrmSession) SetCreatorsClicks(clicks []CreatorClicks) (*types.Transaction, error) {
	return _Smartdrm.Contract.SetCreatorsClicks(&_Smartdrm.TransactOpts, clicks)
}

// SetCreatorsClicks is a paid mutator transaction binding the contract method 0xb782cce2.
//
// Solidity: function setCreatorsClicks((address,uint32)[] clicks) returns()
func (_Smartdrm *SmartdrmTransactorSession) SetCreatorsClicks(clicks []CreatorClicks) (*types.Transaction, error) {
	return _Smartdrm.Contract.SetCreatorsClicks(&_Smartdrm.TransactOpts, clicks)
}

// SplitBalance is a paid mutator transaction binding the contract method 0x449c847c.
//
// Solidity: function splitBalance() returns()
func (_Smartdrm *SmartdrmTransactor) SplitBalance(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Smartdrm.contract.Transact(opts, "splitBalance")
}

// SplitBalance is a paid mutator transaction binding the contract method 0x449c847c.
//
// Solidity: function splitBalance() returns()
func (_Smartdrm *SmartdrmSession) SplitBalance() (*types.Transaction, error) {
	return _Smartdrm.Contract.SplitBalance(&_Smartdrm.TransactOpts)
}

// SplitBalance is a paid mutator transaction binding the contract method 0x449c847c.
//
// Solidity: function splitBalance() returns()
func (_Smartdrm *SmartdrmTransactorSession) SplitBalance() (*types.Transaction, error) {
	return _Smartdrm.Contract.SplitBalance(&_Smartdrm.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Smartdrm *SmartdrmTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Smartdrm.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Smartdrm *SmartdrmSession) Receive() (*types.Transaction, error) {
	return _Smartdrm.Contract.Receive(&_Smartdrm.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Smartdrm *SmartdrmTransactorSession) Receive() (*types.Transaction, error) {
	return _Smartdrm.Contract.Receive(&_Smartdrm.TransactOpts)
}
